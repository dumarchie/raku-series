#!/usr/bin/env raku
use v6.d;

use lib 'lib';
use Series;

constant Format = "%-60s%0.3fs\n";
sub benchmark(&work, $desc) {
    work;
    printf Format, $desc, now - ENTER now;
}

my %Cons = (
  'infix ::' => {
      my Series $series;
      benchmark {
          $series := $_ :: $series for (^$_).reverse;
      }, "Use infix :: to create a Series of $_ nodes";
  },
  insert => {
      my Series $series;
      benchmark {
          $series := $series.insert($_) for (^$_).reverse;
      }, "Use .insert(value) to create a Series of $_ nodes";
  },
  slip => {
      my \values = ^$_;
      benchmark {
          Series.new(slip values);
      }, "Use .new(slip values) to create a Series of $_ nodes";
  }
);

sub MAIN(Int() :$n = 2 ** 22, :$method) {
    %Cons{$method // 'infix ::'}($n);
}
